// <auto-generated>
// THIS (.cs) FILE IS GENERATED BY T4. DO NOT CHANGE IT. CHANGE THE .tt FILE INSTEAD.
// </auto-generated>

using System;
using Microsoft.VisualStudio.TestTools.UnitTesting;

using JapaneseStyleChanger;

namespace JapaneseStyleChangerTest
{
    [TestClass]
    public class TokenCombinerCases
    {
		// Generated text cases.

        [TestMethod]
        public void Test_Combine_MS0000()
        {
			Combiner.CombineMode = CombineMode.MS;
			Combiner.Space = "x";
			var result = Combiner.Combine("A".ToCharArray());
			Assert.AreEqual("A", result, "Unexpected combined text.");
        }
        [TestMethod]
        public void Test_Combine_CG0000()
        {
			Combiner.CombineMode = CombineMode.CG;
			Combiner.Space = "x";
			var result = Combiner.Combine("A".ToCharArray());
			Assert.AreEqual("A", result, "Unexpected combined text.");
        }
        [TestMethod]
        public void Test_Combine_MS0001()
        {
			Combiner.CombineMode = CombineMode.MS;
			Combiner.Space = "x";
			var result = Combiner.Combine("9".ToCharArray());
			Assert.AreEqual("9", result, "Unexpected combined text.");
        }
        [TestMethod]
        public void Test_Combine_CG0001()
        {
			Combiner.CombineMode = CombineMode.CG;
			Combiner.Space = "x";
			var result = Combiner.Combine("9".ToCharArray());
			Assert.AreEqual("9", result, "Unexpected combined text.");
        }
        [TestMethod]
        public void Test_Combine_MS0002()
        {
			Combiner.CombineMode = CombineMode.MS;
			Combiner.Space = "x";
			var result = Combiner.Combine("[".ToCharArray());
			Assert.AreEqual("[", result, "Unexpected combined text.");
        }
        [TestMethod]
        public void Test_Combine_CG0002()
        {
			Combiner.CombineMode = CombineMode.CG;
			Combiner.Space = "x";
			var result = Combiner.Combine("[".ToCharArray());
			Assert.AreEqual("[", result, "Unexpected combined text.");
        }
        [TestMethod]
        public void Test_Combine_MS0003()
        {
			Combiner.CombineMode = CombineMode.MS;
			Combiner.Space = "x";
			var result = Combiner.Combine("]".ToCharArray());
			Assert.AreEqual("]", result, "Unexpected combined text.");
        }
        [TestMethod]
        public void Test_Combine_CG0003()
        {
			Combiner.CombineMode = CombineMode.CG;
			Combiner.Space = "x";
			var result = Combiner.Combine("]".ToCharArray());
			Assert.AreEqual("]", result, "Unexpected combined text.");
        }
        [TestMethod]
        public void Test_Combine_MS0004()
        {
			Combiner.CombineMode = CombineMode.MS;
			Combiner.Space = "x";
			var result = Combiner.Combine("あ".ToCharArray());
			Assert.AreEqual("あ", result, "Unexpected combined text.");
        }
        [TestMethod]
        public void Test_Combine_CG0004()
        {
			Combiner.CombineMode = CombineMode.CG;
			Combiner.Space = "x";
			var result = Combiner.Combine("あ".ToCharArray());
			Assert.AreEqual("あ", result, "Unexpected combined text.");
        }
        [TestMethod]
        public void Test_Combine_MS0005()
        {
			Combiner.CombineMode = CombineMode.MS;
			Combiner.Space = "x";
			var result = Combiner.Combine("（".ToCharArray());
			Assert.AreEqual("（", result, "Unexpected combined text.");
        }
        [TestMethod]
        public void Test_Combine_CG0005()
        {
			Combiner.CombineMode = CombineMode.CG;
			Combiner.Space = "x";
			var result = Combiner.Combine("（".ToCharArray());
			Assert.AreEqual("（", result, "Unexpected combined text.");
        }
        [TestMethod]
        public void Test_Combine_MS0006()
        {
			Combiner.CombineMode = CombineMode.MS;
			Combiner.Space = "x";
			var result = Combiner.Combine("。".ToCharArray());
			Assert.AreEqual("。", result, "Unexpected combined text.");
        }
        [TestMethod]
        public void Test_Combine_CG0006()
        {
			Combiner.CombineMode = CombineMode.CG;
			Combiner.Space = "x";
			var result = Combiner.Combine("。".ToCharArray());
			Assert.AreEqual("。", result, "Unexpected combined text.");
        }
        [TestMethod]
        public void Test_Combine_MS0010()
        {
			Combiner.CombineMode = CombineMode.MS;
			Combiner.Space = "x";
			var result = Combiner.Combine("AA".ToCharArray());
			Assert.AreEqual("AxA", result, "Unexpected combined text.");
        }
        [TestMethod]
        public void Test_Combine_CG0010()
        {
			Combiner.CombineMode = CombineMode.CG;
			Combiner.Space = "x";
			var result = Combiner.Combine("AA".ToCharArray());
			Assert.AreEqual("AxA", result, "Unexpected combined text.");
        }
        [TestMethod]
        public void Test_Combine_MS0011()
        {
			Combiner.CombineMode = CombineMode.MS;
			Combiner.Space = "x";
			var result = Combiner.Combine("A9".ToCharArray());
			Assert.AreEqual("Ax9", result, "Unexpected combined text.");
        }
        [TestMethod]
        public void Test_Combine_CG0011()
        {
			Combiner.CombineMode = CombineMode.CG;
			Combiner.Space = "x";
			var result = Combiner.Combine("A9".ToCharArray());
			Assert.AreEqual("Ax9", result, "Unexpected combined text.");
        }
        [TestMethod]
        public void Test_Combine_MS0012()
        {
			Combiner.CombineMode = CombineMode.MS;
			Combiner.Space = "x";
			var result = Combiner.Combine("9A".ToCharArray());
			Assert.AreEqual("9xA", result, "Unexpected combined text.");
        }
        [TestMethod]
        public void Test_Combine_CG0012()
        {
			Combiner.CombineMode = CombineMode.CG;
			Combiner.Space = "x";
			var result = Combiner.Combine("9A".ToCharArray());
			Assert.AreEqual("9xA", result, "Unexpected combined text.");
        }
        [TestMethod]
        public void Test_Combine_MS0013()
        {
			Combiner.CombineMode = CombineMode.MS;
			Combiner.Space = "x";
			var result = Combiner.Combine("99".ToCharArray());
			Assert.AreEqual("9x9", result, "Unexpected combined text.");
        }
        [TestMethod]
        public void Test_Combine_CG0013()
        {
			Combiner.CombineMode = CombineMode.CG;
			Combiner.Space = "x";
			var result = Combiner.Combine("99".ToCharArray());
			Assert.AreEqual("9x9", result, "Unexpected combined text.");
        }
        [TestMethod]
        public void Test_Combine_MS0100()
        {
			Combiner.CombineMode = CombineMode.MS;
			Combiner.Space = "x";
			var result = Combiner.Combine("あ9（.]9[.".ToCharArray());
			Assert.AreEqual("あx9（.]x9x[.", result, "Unexpected combined text.");
        }
        [TestMethod]
        public void Test_Combine_CG0100()
        {
			Combiner.CombineMode = CombineMode.CG;
			Combiner.Space = "x";
			var result = Combiner.Combine("あ9（.]9[.".ToCharArray());
			Assert.AreEqual("あ9（.]x9x[.", result, "Unexpected combined text.");
        }
        [TestMethod]
        public void Test_Combine_MS0101()
        {
			Combiner.CombineMode = CombineMode.MS;
			Combiner.Space = "x";
			var result = Combiner.Combine("あ9A.（9]（".ToCharArray());
			Assert.AreEqual("あx9xA.（9]（", result, "Unexpected combined text.");
        }
        [TestMethod]
        public void Test_Combine_CG0101()
        {
			Combiner.CombineMode = CombineMode.CG;
			Combiner.Space = "x";
			var result = Combiner.Combine("あ9A.（9]（".ToCharArray());
			Assert.AreEqual("あ9xA.（9]（", result, "Unexpected combined text.");
        }
        [TestMethod]
        public void Test_Combine_MS0102()
        {
			Combiner.CombineMode = CombineMode.MS;
			Combiner.Space = "x";
			var result = Combiner.Combine("[[A..9（A".ToCharArray());
			Assert.AreEqual("[[A..x9（A", result, "Unexpected combined text.");
        }
        [TestMethod]
        public void Test_Combine_CG0102()
        {
			Combiner.CombineMode = CombineMode.CG;
			Combiner.Space = "x";
			var result = Combiner.Combine("[[A..9（A".ToCharArray());
			Assert.AreEqual("[[A..x9（A", result, "Unexpected combined text.");
        }
        [TestMethod]
        public void Test_Combine_MS0103()
        {
			Combiner.CombineMode = CombineMode.MS;
			Combiner.Space = "x";
			var result = Combiner.Combine("9.AAあAあ（".ToCharArray());
			Assert.AreEqual("9.xAxAxあxAxあ（", result, "Unexpected combined text.");
        }
        [TestMethod]
        public void Test_Combine_CG0103()
        {
			Combiner.CombineMode = CombineMode.CG;
			Combiner.Space = "x";
			var result = Combiner.Combine("9.AAあAあ（".ToCharArray());
			Assert.AreEqual("9.xAxAあAあ（", result, "Unexpected combined text.");
        }
        [TestMethod]
        public void Test_Combine_MS0104()
        {
			Combiner.CombineMode = CombineMode.MS;
			Combiner.Space = "x";
			var result = Combiner.Combine("[（.[9]（A".ToCharArray());
			Assert.AreEqual("[（.x[9]（A", result, "Unexpected combined text.");
        }
        [TestMethod]
        public void Test_Combine_CG0104()
        {
			Combiner.CombineMode = CombineMode.CG;
			Combiner.Space = "x";
			var result = Combiner.Combine("[（.[9]（A".ToCharArray());
			Assert.AreEqual("[（.x[9]（A", result, "Unexpected combined text.");
        }
        [TestMethod]
        public void Test_Combine_MS0105()
        {
			Combiner.CombineMode = CombineMode.MS;
			Combiner.Space = "x";
			var result = Combiner.Combine("[][].[あ（".ToCharArray());
			Assert.AreEqual("[]x[].x[あ（", result, "Unexpected combined text.");
        }
        [TestMethod]
        public void Test_Combine_CG0105()
        {
			Combiner.CombineMode = CombineMode.CG;
			Combiner.Space = "x";
			var result = Combiner.Combine("[][].[あ（".ToCharArray());
			Assert.AreEqual("[]x[].x[あ（", result, "Unexpected combined text.");
        }
        [TestMethod]
        public void Test_Combine_MS0106()
        {
			Combiner.CombineMode = CombineMode.MS;
			Combiner.Space = "x";
			var result = Combiner.Combine("A99あ.あ[[".ToCharArray());
			Assert.AreEqual("Ax9x9xあ.xあx[[", result, "Unexpected combined text.");
        }
        [TestMethod]
        public void Test_Combine_CG0106()
        {
			Combiner.CombineMode = CombineMode.CG;
			Combiner.Space = "x";
			var result = Combiner.Combine("A99あ.あ[[".ToCharArray());
			Assert.AreEqual("Ax9x9あ.xあx[[", result, "Unexpected combined text.");
        }
        [TestMethod]
        public void Test_Combine_MS0107()
        {
			Combiner.CombineMode = CombineMode.MS;
			Combiner.Space = "x";
			var result = Combiner.Combine("あ]A]A][[".ToCharArray());
			Assert.AreEqual("あ]xA]xA]x[[", result, "Unexpected combined text.");
        }
        [TestMethod]
        public void Test_Combine_CG0107()
        {
			Combiner.CombineMode = CombineMode.CG;
			Combiner.Space = "x";
			var result = Combiner.Combine("あ]A]A][[".ToCharArray());
			Assert.AreEqual("あ]xA]xA]x[[", result, "Unexpected combined text.");
        }
        [TestMethod]
        public void Test_Combine_MS0108()
        {
			Combiner.CombineMode = CombineMode.MS;
			Combiner.Space = "x";
			var result = Combiner.Combine("あ99AA（[A".ToCharArray());
			Assert.AreEqual("あx9x9xAxA（[A", result, "Unexpected combined text.");
        }
        [TestMethod]
        public void Test_Combine_CG0108()
        {
			Combiner.CombineMode = CombineMode.CG;
			Combiner.Space = "x";
			var result = Combiner.Combine("あ99AA（[A".ToCharArray());
			Assert.AreEqual("あ9x9xAxA（[A", result, "Unexpected combined text.");
        }
        [TestMethod]
        public void Test_Combine_MS0109()
        {
			Combiner.CombineMode = CombineMode.MS;
			Combiner.Space = "x";
			var result = Combiner.Combine("]9（.9あ]9".ToCharArray());
			Assert.AreEqual("]x9（.x9xあ]x9", result, "Unexpected combined text.");
        }
        [TestMethod]
        public void Test_Combine_CG0109()
        {
			Combiner.CombineMode = CombineMode.CG;
			Combiner.Space = "x";
			var result = Combiner.Combine("]9（.9あ]9".ToCharArray());
			Assert.AreEqual("]x9（.x9あ]x9", result, "Unexpected combined text.");
        }
        [TestMethod]
        public void Test_Combine_MS0110()
        {
			Combiner.CombineMode = CombineMode.MS;
			Combiner.Space = "x";
			var result = Combiner.Combine("（].][]あA".ToCharArray());
			Assert.AreEqual("（].]x[]xあxA", result, "Unexpected combined text.");
        }
        [TestMethod]
        public void Test_Combine_CG0110()
        {
			Combiner.CombineMode = CombineMode.CG;
			Combiner.Space = "x";
			var result = Combiner.Combine("（].][]あA".ToCharArray());
			Assert.AreEqual("（].]x[]xあA", result, "Unexpected combined text.");
        }
        [TestMethod]
        public void Test_Combine_MS0111()
        {
			Combiner.CombineMode = CombineMode.MS;
			Combiner.Space = "x";
			var result = Combiner.Combine("9A（（[あ].".ToCharArray());
			Assert.AreEqual("9xA（（[あ].", result, "Unexpected combined text.");
        }
        [TestMethod]
        public void Test_Combine_CG0111()
        {
			Combiner.CombineMode = CombineMode.CG;
			Combiner.Space = "x";
			var result = Combiner.Combine("9A（（[あ].".ToCharArray());
			Assert.AreEqual("9xA（（[あ].", result, "Unexpected combined text.");
        }
        [TestMethod]
        public void Test_Combine_MS0112()
        {
			Combiner.CombineMode = CombineMode.MS;
			Combiner.Space = "x";
			var result = Combiner.Combine("..]A[A[9".ToCharArray());
			Assert.AreEqual("..]xAx[Ax[9", result, "Unexpected combined text.");
        }
        [TestMethod]
        public void Test_Combine_CG0112()
        {
			Combiner.CombineMode = CombineMode.CG;
			Combiner.Space = "x";
			var result = Combiner.Combine("..]A[A[9".ToCharArray());
			Assert.AreEqual("..]xAx[Ax[9", result, "Unexpected combined text.");
        }
        [TestMethod]
        public void Test_Combine_MS0113()
        {
			Combiner.CombineMode = CombineMode.MS;
			Combiner.Space = "x";
			var result = Combiner.Combine("（9[（あ.（[".ToCharArray());
			Assert.AreEqual("（9x[（あ.（[", result, "Unexpected combined text.");
        }
        [TestMethod]
        public void Test_Combine_CG0113()
        {
			Combiner.CombineMode = CombineMode.CG;
			Combiner.Space = "x";
			var result = Combiner.Combine("（9[（あ.（[".ToCharArray());
			Assert.AreEqual("（9x[（あ.（[", result, "Unexpected combined text.");
        }
        [TestMethod]
        public void Test_Combine_MS0114()
        {
			Combiner.CombineMode = CombineMode.MS;
			Combiner.Space = "x";
			var result = Combiner.Combine("A]（あ[.9]".ToCharArray());
			Assert.AreEqual("A]（あx[.x9]", result, "Unexpected combined text.");
        }
        [TestMethod]
        public void Test_Combine_CG0114()
        {
			Combiner.CombineMode = CombineMode.CG;
			Combiner.Space = "x";
			var result = Combiner.Combine("A]（あ[.9]".ToCharArray());
			Assert.AreEqual("A]（あx[.x9]", result, "Unexpected combined text.");
        }
        [TestMethod]
        public void Test_Combine_MS0115()
        {
			Combiner.CombineMode = CombineMode.MS;
			Combiner.Space = "x";
			var result = Combiner.Combine(".AA..あ（]".ToCharArray());
			Assert.AreEqual(".xAxA..xあ（]", result, "Unexpected combined text.");
        }
        [TestMethod]
        public void Test_Combine_CG0115()
        {
			Combiner.CombineMode = CombineMode.CG;
			Combiner.Space = "x";
			var result = Combiner.Combine(".AA..あ（]".ToCharArray());
			Assert.AreEqual(".xAxA..xあ（]", result, "Unexpected combined text.");
        }
        [TestMethod]
        public void Test_Combine_MS0116()
        {
			Combiner.CombineMode = CombineMode.MS;
			Combiner.Space = "x";
			var result = Combiner.Combine("A9.あ.A（あ".ToCharArray());
			Assert.AreEqual("Ax9.xあ.xA（あ", result, "Unexpected combined text.");
        }
        [TestMethod]
        public void Test_Combine_CG0116()
        {
			Combiner.CombineMode = CombineMode.CG;
			Combiner.Space = "x";
			var result = Combiner.Combine("A9.あ.A（あ".ToCharArray());
			Assert.AreEqual("Ax9.xあ.xA（あ", result, "Unexpected combined text.");
        }
        [TestMethod]
        public void Test_Combine_MS0117()
        {
			Combiner.CombineMode = CombineMode.MS;
			Combiner.Space = "x";
			var result = Combiner.Combine("9あA[（A9[".ToCharArray());
			Assert.AreEqual("9xあxAx[（Ax9x[", result, "Unexpected combined text.");
        }
        [TestMethod]
        public void Test_Combine_CG0117()
        {
			Combiner.CombineMode = CombineMode.CG;
			Combiner.Space = "x";
			var result = Combiner.Combine("9あA[（A9[".ToCharArray());
			Assert.AreEqual("9あAx[（Ax9x[", result, "Unexpected combined text.");
        }
        [TestMethod]
        public void Test_Combine_MS0118()
        {
			Combiner.CombineMode = CombineMode.MS;
			Combiner.Space = "x";
			var result = Combiner.Combine("[9.[.（（（".ToCharArray());
			Assert.AreEqual("[9.x[.（（（", result, "Unexpected combined text.");
        }
        [TestMethod]
        public void Test_Combine_CG0118()
        {
			Combiner.CombineMode = CombineMode.CG;
			Combiner.Space = "x";
			var result = Combiner.Combine("[9.[.（（（".ToCharArray());
			Assert.AreEqual("[9.x[.（（（", result, "Unexpected combined text.");
        }
        [TestMethod]
        public void Test_Combine_MS0119()
        {
			Combiner.CombineMode = CombineMode.MS;
			Combiner.Space = "x";
			var result = Combiner.Combine("]]ああ[あああ".ToCharArray());
			Assert.AreEqual("]]xああx[あああ", result, "Unexpected combined text.");
        }
        [TestMethod]
        public void Test_Combine_CG0119()
        {
			Combiner.CombineMode = CombineMode.CG;
			Combiner.Space = "x";
			var result = Combiner.Combine("]]ああ[あああ".ToCharArray());
			Assert.AreEqual("]]xああx[あああ", result, "Unexpected combined text.");
        }
        [TestMethod]
        public void Test_Combine_MS0120()
        {
			Combiner.CombineMode = CombineMode.MS;
			Combiner.Space = "x";
			var result = Combiner.Combine("Aあ]]あ（99".ToCharArray());
			Assert.AreEqual("Axあ]]xあ（9x9", result, "Unexpected combined text.");
        }
        [TestMethod]
        public void Test_Combine_CG0120()
        {
			Combiner.CombineMode = CombineMode.CG;
			Combiner.Space = "x";
			var result = Combiner.Combine("Aあ]]あ（99".ToCharArray());
			Assert.AreEqual("Aあ]]xあ（9x9", result, "Unexpected combined text.");
        }
        [TestMethod]
        public void Test_Combine_MS0121()
        {
			Combiner.CombineMode = CombineMode.MS;
			Combiner.Space = "x";
			var result = Combiner.Combine("]]（]AAAA".ToCharArray());
			Assert.AreEqual("]]（]xAxAxAxA", result, "Unexpected combined text.");
        }
        [TestMethod]
        public void Test_Combine_CG0121()
        {
			Combiner.CombineMode = CombineMode.CG;
			Combiner.Space = "x";
			var result = Combiner.Combine("]]（]AAAA".ToCharArray());
			Assert.AreEqual("]]（]xAxAxAxA", result, "Unexpected combined text.");
        }
        [TestMethod]
        public void Test_Combine_MS0200()
        {
			Combiner.CombineMode = CombineMode.MS;
			Combiner.Space = "x";
			var result = Combiner.Combine("A（あ]あ[（".ToCharArray());
			Assert.AreEqual("A（あ]xあx[（", result, "Unexpected combined text.");
        }
        [TestMethod]
        public void Test_Combine_CG0200()
        {
			Combiner.CombineMode = CombineMode.CG;
			Combiner.Space = "x";
			var result = Combiner.Combine("A（あ]あ[（".ToCharArray());
			Assert.AreEqual("A（あ]xあx[（", result, "Unexpected combined text.");
        }
        [TestMethod]
        public void Test_Combine_MS0201()
        {
			Combiner.CombineMode = CombineMode.MS;
			Combiner.Space = "x";
			var result = Combiner.Combine("[あ（（]（A".ToCharArray());
			Assert.AreEqual("[あ（（]（A", result, "Unexpected combined text.");
        }
        [TestMethod]
        public void Test_Combine_CG0201()
        {
			Combiner.CombineMode = CombineMode.CG;
			Combiner.Space = "x";
			var result = Combiner.Combine("[あ（（]（A".ToCharArray());
			Assert.AreEqual("[あ（（]（A", result, "Unexpected combined text.");
        }
        [TestMethod]
        public void Test_Combine_MS0202()
        {
			Combiner.CombineMode = CombineMode.MS;
			Combiner.Space = "x";
			var result = Combiner.Combine("（（[[]）あ".ToCharArray());
			Assert.AreEqual("（（[[]）あ", result, "Unexpected combined text.");
        }
        [TestMethod]
        public void Test_Combine_CG0202()
        {
			Combiner.CombineMode = CombineMode.CG;
			Combiner.Space = "x";
			var result = Combiner.Combine("（（[[]）あ".ToCharArray());
			Assert.AreEqual("（（[[]）あ", result, "Unexpected combined text.");
        }
        [TestMethod]
        public void Test_Combine_MS0203()
        {
			Combiner.CombineMode = CombineMode.MS;
			Combiner.Space = "x";
			var result = Combiner.Combine("（（[（あ（あ".ToCharArray());
			Assert.AreEqual("（（[（あ（あ", result, "Unexpected combined text.");
        }
        [TestMethod]
        public void Test_Combine_CG0203()
        {
			Combiner.CombineMode = CombineMode.CG;
			Combiner.Space = "x";
			var result = Combiner.Combine("（（[（あ（あ".ToCharArray());
			Assert.AreEqual("（（[（あ（あ", result, "Unexpected combined text.");
        }
        [TestMethod]
        public void Test_Combine_MS0204()
        {
			Combiner.CombineMode = CombineMode.MS;
			Combiner.Space = "x";
			var result = Combiner.Combine("）A]]A（A".ToCharArray());
			Assert.AreEqual("）A]]xA（A", result, "Unexpected combined text.");
        }
        [TestMethod]
        public void Test_Combine_CG0204()
        {
			Combiner.CombineMode = CombineMode.CG;
			Combiner.Space = "x";
			var result = Combiner.Combine("）A]]A（A".ToCharArray());
			Assert.AreEqual("）A]]xA（A", result, "Unexpected combined text.");
        }
        [TestMethod]
        public void Test_Combine_MS0205()
        {
			Combiner.CombineMode = CombineMode.MS;
			Combiner.Space = "x";
			var result = Combiner.Combine("[ああAA（[".ToCharArray());
			Assert.AreEqual("[ああxAxA（[", result, "Unexpected combined text.");
        }
        [TestMethod]
        public void Test_Combine_CG0205()
        {
			Combiner.CombineMode = CombineMode.CG;
			Combiner.Space = "x";
			var result = Combiner.Combine("[ああAA（[".ToCharArray());
			Assert.AreEqual("[ああAxA（[", result, "Unexpected combined text.");
        }
        [TestMethod]
        public void Test_Combine_MS0206()
        {
			Combiner.CombineMode = CombineMode.MS;
			Combiner.Space = "x";
			var result = Combiner.Combine("]））A）[）".ToCharArray());
			Assert.AreEqual("]））A）[）", result, "Unexpected combined text.");
        }
        [TestMethod]
        public void Test_Combine_CG0206()
        {
			Combiner.CombineMode = CombineMode.CG;
			Combiner.Space = "x";
			var result = Combiner.Combine("]））A）[）".ToCharArray());
			Assert.AreEqual("]））A）[）", result, "Unexpected combined text.");
        }
        [TestMethod]
        public void Test_Combine_MS0207()
        {
			Combiner.CombineMode = CombineMode.MS;
			Combiner.Space = "x";
			var result = Combiner.Combine("あA）[[あA".ToCharArray());
			Assert.AreEqual("あxA）[[あxA", result, "Unexpected combined text.");
        }
        [TestMethod]
        public void Test_Combine_CG0207()
        {
			Combiner.CombineMode = CombineMode.CG;
			Combiner.Space = "x";
			var result = Combiner.Combine("あA）[[あA".ToCharArray());
			Assert.AreEqual("あA）[[あA", result, "Unexpected combined text.");
        }
        [TestMethod]
        public void Test_Combine_MS0208()
        {
			Combiner.CombineMode = CombineMode.MS;
			Combiner.Space = "x";
			var result = Combiner.Combine("]]あ）（]あ".ToCharArray());
			Assert.AreEqual("]]xあ）（]xあ", result, "Unexpected combined text.");
        }
        [TestMethod]
        public void Test_Combine_CG0208()
        {
			Combiner.CombineMode = CombineMode.CG;
			Combiner.Space = "x";
			var result = Combiner.Combine("]]あ）（]あ".ToCharArray());
			Assert.AreEqual("]]xあ）（]xあ", result, "Unexpected combined text.");
        }
        [TestMethod]
        public void Test_Combine_MS0209()
        {
			Combiner.CombineMode = CombineMode.MS;
			Combiner.Space = "x";
			var result = Combiner.Combine("あ（A][][".ToCharArray());
			Assert.AreEqual("あ（A]x[]x[", result, "Unexpected combined text.");
        }
        [TestMethod]
        public void Test_Combine_CG0209()
        {
			Combiner.CombineMode = CombineMode.CG;
			Combiner.Space = "x";
			var result = Combiner.Combine("あ（A][][".ToCharArray());
			Assert.AreEqual("あ（A]x[]x[", result, "Unexpected combined text.");
        }
        [TestMethod]
        public void Test_Combine_MS0210()
        {
			Combiner.CombineMode = CombineMode.MS;
			Combiner.Space = "x";
			var result = Combiner.Combine("）ああ[[AA".ToCharArray());
			Assert.AreEqual("）ああx[[AxA", result, "Unexpected combined text.");
        }
        [TestMethod]
        public void Test_Combine_CG0210()
        {
			Combiner.CombineMode = CombineMode.CG;
			Combiner.Space = "x";
			var result = Combiner.Combine("）ああ[[AA".ToCharArray());
			Assert.AreEqual("）ああx[[AxA", result, "Unexpected combined text.");
        }
        [TestMethod]
        public void Test_Combine_MS0211()
        {
			Combiner.CombineMode = CombineMode.MS;
			Combiner.Space = "x";
			var result = Combiner.Combine("（））]][）".ToCharArray());
			Assert.AreEqual("（））]]x[）", result, "Unexpected combined text.");
        }
        [TestMethod]
        public void Test_Combine_CG0211()
        {
			Combiner.CombineMode = CombineMode.CG;
			Combiner.Space = "x";
			var result = Combiner.Combine("（））]][）".ToCharArray());
			Assert.AreEqual("（））]]x[）", result, "Unexpected combined text.");
        }
        [TestMethod]
        public void Test_Combine_MS0212()
        {
			Combiner.CombineMode = CombineMode.MS;
			Combiner.Space = "x";
			var result = Combiner.Combine("あ]（]（）あ".ToCharArray());
			Assert.AreEqual("あ]（]（）あ", result, "Unexpected combined text.");
        }
        [TestMethod]
        public void Test_Combine_CG0212()
        {
			Combiner.CombineMode = CombineMode.CG;
			Combiner.Space = "x";
			var result = Combiner.Combine("あ]（]（）あ".ToCharArray());
			Assert.AreEqual("あ]（]（）あ", result, "Unexpected combined text.");
        }
        [TestMethod]
        public void Test_Combine_MS0213()
        {
			Combiner.CombineMode = CombineMode.MS;
			Combiner.Space = "x";
			var result = Combiner.Combine("A]A[（）]".ToCharArray());
			Assert.AreEqual("A]xAx[（）]", result, "Unexpected combined text.");
        }
        [TestMethod]
        public void Test_Combine_CG0213()
        {
			Combiner.CombineMode = CombineMode.CG;
			Combiner.Space = "x";
			var result = Combiner.Combine("A]A[（）]".ToCharArray());
			Assert.AreEqual("A]xAx[（）]", result, "Unexpected combined text.");
        }
        [TestMethod]
        public void Test_Combine_MS0214()
        {
			Combiner.CombineMode = CombineMode.MS;
			Combiner.Space = "x";
			var result = Combiner.Combine("あ]A[AAあ".ToCharArray());
			Assert.AreEqual("あ]xAx[AxAxあ", result, "Unexpected combined text.");
        }
        [TestMethod]
        public void Test_Combine_CG0214()
        {
			Combiner.CombineMode = CombineMode.CG;
			Combiner.Space = "x";
			var result = Combiner.Combine("あ]A[AAあ".ToCharArray());
			Assert.AreEqual("あ]xAx[AxAあ", result, "Unexpected combined text.");
        }
        [TestMethod]
        public void Test_Combine_MS0215()
        {
			Combiner.CombineMode = CombineMode.MS;
			Combiner.Space = "x";
			var result = Combiner.Combine("）Aあ））（[".ToCharArray());
			Assert.AreEqual("）Axあ））（[", result, "Unexpected combined text.");
        }
        [TestMethod]
        public void Test_Combine_CG0215()
        {
			Combiner.CombineMode = CombineMode.CG;
			Combiner.Space = "x";
			var result = Combiner.Combine("）Aあ））（[".ToCharArray());
			Assert.AreEqual("）Aあ））（[", result, "Unexpected combined text.");
        }
        [TestMethod]
        public void Test_Combine_MS0216()
        {
			Combiner.CombineMode = CombineMode.MS;
			Combiner.Space = "x";
			var result = Combiner.Combine("）（A）]）[".ToCharArray());
			Assert.AreEqual("）（A）]）[", result, "Unexpected combined text.");
        }
        [TestMethod]
        public void Test_Combine_CG0216()
        {
			Combiner.CombineMode = CombineMode.CG;
			Combiner.Space = "x";
			var result = Combiner.Combine("）（A）]）[".ToCharArray());
			Assert.AreEqual("）（A）]）[", result, "Unexpected combined text.");
        }
        [TestMethod]
        public void Test_Combine_MS0217()
        {
			Combiner.CombineMode = CombineMode.MS;
			Combiner.Space = "x";
			var result = Combiner.Combine("[Aああ[）A".ToCharArray());
			Assert.AreEqual("[Axああx[）A", result, "Unexpected combined text.");
        }
        [TestMethod]
        public void Test_Combine_CG0217()
        {
			Combiner.CombineMode = CombineMode.CG;
			Combiner.Space = "x";
			var result = Combiner.Combine("[Aああ[）A".ToCharArray());
			Assert.AreEqual("[Aああx[）A", result, "Unexpected combined text.");
        }
        [TestMethod]
        public void Test_Combine_MS0218()
        {
			Combiner.CombineMode = CombineMode.MS;
			Combiner.Space = "x";
			var result = Combiner.Combine("あ）[]A[A".ToCharArray());
			Assert.AreEqual("あ）[]xAx[A", result, "Unexpected combined text.");
        }
        [TestMethod]
        public void Test_Combine_CG0218()
        {
			Combiner.CombineMode = CombineMode.CG;
			Combiner.Space = "x";
			var result = Combiner.Combine("あ）[]A[A".ToCharArray());
			Assert.AreEqual("あ）[]xAx[A", result, "Unexpected combined text.");
        }
        [TestMethod]
        public void Test_Combine_MS0300()
        {
			Combiner.CombineMode = CombineMode.MS;
			Combiner.Space = "x";
			var result = Combiner.Combine("あキキA。。".ToCharArray());
			Assert.AreEqual("あキxキxA。。", result, "Unexpected combined text.");
        }
        [TestMethod]
        public void Test_Combine_CG0300()
        {
			Combiner.CombineMode = CombineMode.CG;
			Combiner.Space = "x";
			var result = Combiner.Combine("あキキA。。".ToCharArray());
			Assert.AreEqual("あキキA。。", result, "Unexpected combined text.");
        }
        [TestMethod]
        public void Test_Combine_MS0301()
        {
			Combiner.CombineMode = CombineMode.MS;
			Combiner.Space = "x";
			var result = Combiner.Combine("キ.BあAあ".ToCharArray());
			Assert.AreEqual("キ.xBxあxAxあ", result, "Unexpected combined text.");
        }
        [TestMethod]
        public void Test_Combine_CG0301()
        {
			Combiner.CombineMode = CombineMode.CG;
			Combiner.Space = "x";
			var result = Combiner.Combine("キ.BあAあ".ToCharArray());
			Assert.AreEqual("キ.xBあAあ", result, "Unexpected combined text.");
        }
        [TestMethod]
        public void Test_Combine_MS0302()
        {
			Combiner.CombineMode = CombineMode.MS;
			Combiner.Space = "x";
			var result = Combiner.Combine("。キBBキA".ToCharArray());
			Assert.AreEqual("。キxBxBxキxA", result, "Unexpected combined text.");
        }
        [TestMethod]
        public void Test_Combine_CG0302()
        {
			Combiner.CombineMode = CombineMode.CG;
			Combiner.Space = "x";
			var result = Combiner.Combine("。キBBキA".ToCharArray());
			Assert.AreEqual("。キBxBキA", result, "Unexpected combined text.");
        }
        [TestMethod]
        public void Test_Combine_MS0303()
        {
			Combiner.CombineMode = CombineMode.MS;
			Combiner.Space = "x";
			var result = Combiner.Combine("キキあ..カ".ToCharArray());
			Assert.AreEqual("キxキあ..xカ", result, "Unexpected combined text.");
        }
        [TestMethod]
        public void Test_Combine_CG0303()
        {
			Combiner.CombineMode = CombineMode.CG;
			Combiner.Space = "x";
			var result = Combiner.Combine("キキあ..カ".ToCharArray());
			Assert.AreEqual("キキあ..xカ", result, "Unexpected combined text.");
        }
        [TestMethod]
        public void Test_Combine_MS0304()
        {
			Combiner.CombineMode = CombineMode.MS;
			Combiner.Space = "x";
			var result = Combiner.Combine("AB。キキあ".ToCharArray());
			Assert.AreEqual("AxB。キxキあ", result, "Unexpected combined text.");
        }
        [TestMethod]
        public void Test_Combine_CG0304()
        {
			Combiner.CombineMode = CombineMode.CG;
			Combiner.Space = "x";
			var result = Combiner.Combine("AB。キキあ".ToCharArray());
			Assert.AreEqual("AxB。キキあ", result, "Unexpected combined text.");
        }
        [TestMethod]
        public void Test_Combine_MS0305()
        {
			Combiner.CombineMode = CombineMode.MS;
			Combiner.Space = "x";
			var result = Combiner.Combine("カキカBキ。".ToCharArray());
			Assert.AreEqual("カxキxカxBxキ。", result, "Unexpected combined text.");
        }
        [TestMethod]
        public void Test_Combine_CG0305()
        {
			Combiner.CombineMode = CombineMode.CG;
			Combiner.Space = "x";
			var result = Combiner.Combine("カキカBキ。".ToCharArray());
			Assert.AreEqual("カキカBキ。", result, "Unexpected combined text.");
        }
        [TestMethod]
        public void Test_Combine_MS0306()
        {
			Combiner.CombineMode = CombineMode.MS;
			Combiner.Space = "x";
			var result = Combiner.Combine("あカ。A.A".ToCharArray());
			Assert.AreEqual("あカ。A.xA", result, "Unexpected combined text.");
        }
        [TestMethod]
        public void Test_Combine_CG0306()
        {
			Combiner.CombineMode = CombineMode.CG;
			Combiner.Space = "x";
			var result = Combiner.Combine("あカ。A.A".ToCharArray());
			Assert.AreEqual("あカ。A.xA", result, "Unexpected combined text.");
        }
        [TestMethod]
        public void Test_Combine_MS0307()
        {
			Combiner.CombineMode = CombineMode.MS;
			Combiner.Space = "x";
			var result = Combiner.Combine("あ。BAあB".ToCharArray());
			Assert.AreEqual("あ。BxAxあxB", result, "Unexpected combined text.");
        }
        [TestMethod]
        public void Test_Combine_CG0307()
        {
			Combiner.CombineMode = CombineMode.CG;
			Combiner.Space = "x";
			var result = Combiner.Combine("あ。BAあB".ToCharArray());
			Assert.AreEqual("あ。BxAあB", result, "Unexpected combined text.");
        }
        [TestMethod]
        public void Test_Combine_MS0308()
        {
			Combiner.CombineMode = CombineMode.MS;
			Combiner.Space = "x";
			var result = Combiner.Combine("ああカあBあ".ToCharArray());
			Assert.AreEqual("ああカあxBxあ", result, "Unexpected combined text.");
        }
        [TestMethod]
        public void Test_Combine_CG0308()
        {
			Combiner.CombineMode = CombineMode.CG;
			Combiner.Space = "x";
			var result = Combiner.Combine("ああカあBあ".ToCharArray());
			Assert.AreEqual("ああカあBあ", result, "Unexpected combined text.");
        }
        [TestMethod]
        public void Test_Combine_MS0309()
        {
			Combiner.CombineMode = CombineMode.MS;
			Combiner.Space = "x";
			var result = Combiner.Combine("。キカカ.キ".ToCharArray());
			Assert.AreEqual("。キxカxカ.xキ", result, "Unexpected combined text.");
        }
        [TestMethod]
        public void Test_Combine_CG0309()
        {
			Combiner.CombineMode = CombineMode.CG;
			Combiner.Space = "x";
			var result = Combiner.Combine("。キカカ.キ".ToCharArray());
			Assert.AreEqual("。キカカ.xキ", result, "Unexpected combined text.");
        }
        [TestMethod]
        public void Test_Combine_MS0310()
        {
			Combiner.CombineMode = CombineMode.MS;
			Combiner.Space = "x";
			var result = Combiner.Combine("A。.。.B".ToCharArray());
			Assert.AreEqual("A。.。.xB", result, "Unexpected combined text.");
        }
        [TestMethod]
        public void Test_Combine_CG0310()
        {
			Combiner.CombineMode = CombineMode.CG;
			Combiner.Space = "x";
			var result = Combiner.Combine("A。.。.B".ToCharArray());
			Assert.AreEqual("A。.。.xB", result, "Unexpected combined text.");
        }
        [TestMethod]
        public void Test_Combine_MS0311()
        {
			Combiner.CombineMode = CombineMode.MS;
			Combiner.Space = "x";
			var result = Combiner.Combine("カ。B。Aカ".ToCharArray());
			Assert.AreEqual("カ。B。Axカ", result, "Unexpected combined text.");
        }
        [TestMethod]
        public void Test_Combine_CG0311()
        {
			Combiner.CombineMode = CombineMode.CG;
			Combiner.Space = "x";
			var result = Combiner.Combine("カ。B。Aカ".ToCharArray());
			Assert.AreEqual("カ。B。Aカ", result, "Unexpected combined text.");
        }
        [TestMethod]
        public void Test_Combine_MS0312()
        {
			Combiner.CombineMode = CombineMode.MS;
			Combiner.Space = "x";
			var result = Combiner.Combine("A.あ.。カ".ToCharArray());
			Assert.AreEqual("A.xあ.。カ", result, "Unexpected combined text.");
        }
        [TestMethod]
        public void Test_Combine_CG0312()
        {
			Combiner.CombineMode = CombineMode.CG;
			Combiner.Space = "x";
			var result = Combiner.Combine("A.あ.。カ".ToCharArray());
			Assert.AreEqual("A.xあ.。カ", result, "Unexpected combined text.");
        }
        [TestMethod]
        public void Test_Combine_MS0313()
        {
			Combiner.CombineMode = CombineMode.MS;
			Combiner.Space = "x";
			var result = Combiner.Combine("B.カAキB".ToCharArray());
			Assert.AreEqual("B.xカxAxキxB", result, "Unexpected combined text.");
        }
        [TestMethod]
        public void Test_Combine_CG0313()
        {
			Combiner.CombineMode = CombineMode.CG;
			Combiner.Space = "x";
			var result = Combiner.Combine("B.カAキB".ToCharArray());
			Assert.AreEqual("B.xカAキB", result, "Unexpected combined text.");
        }
        [TestMethod]
        public void Test_Combine_MS0314()
        {
			Combiner.CombineMode = CombineMode.MS;
			Combiner.Space = "x";
			var result = Combiner.Combine("カAカ。。あ".ToCharArray());
			Assert.AreEqual("カxAxカ。。あ", result, "Unexpected combined text.");
        }
        [TestMethod]
        public void Test_Combine_CG0314()
        {
			Combiner.CombineMode = CombineMode.CG;
			Combiner.Space = "x";
			var result = Combiner.Combine("カAカ。。あ".ToCharArray());
			Assert.AreEqual("カAカ。。あ", result, "Unexpected combined text.");
        }
        [TestMethod]
        public void Test_Combine_MS0315()
        {
			Combiner.CombineMode = CombineMode.MS;
			Combiner.Space = "x";
			var result = Combiner.Combine("ABあB。あ".ToCharArray());
			Assert.AreEqual("AxBxあxB。あ", result, "Unexpected combined text.");
        }
        [TestMethod]
        public void Test_Combine_CG0315()
        {
			Combiner.CombineMode = CombineMode.CG;
			Combiner.Space = "x";
			var result = Combiner.Combine("ABあB。あ".ToCharArray());
			Assert.AreEqual("AxBあB。あ", result, "Unexpected combined text.");
        }
        [TestMethod]
        public void Test_Combine_MS0316()
        {
			Combiner.CombineMode = CombineMode.MS;
			Combiner.Space = "x";
			var result = Combiner.Combine("。ああ。カ.".ToCharArray());
			Assert.AreEqual("。ああ。カ.", result, "Unexpected combined text.");
        }
        [TestMethod]
        public void Test_Combine_CG0316()
        {
			Combiner.CombineMode = CombineMode.CG;
			Combiner.Space = "x";
			var result = Combiner.Combine("。ああ。カ.".ToCharArray());
			Assert.AreEqual("。ああ。カ.", result, "Unexpected combined text.");
        }
        [TestMethod]
        public void Test_Combine_MS0317()
        {
			Combiner.CombineMode = CombineMode.MS;
			Combiner.Space = "x";
			var result = Combiner.Combine("Bカキあ.カ".ToCharArray());
			Assert.AreEqual("Bxカxキあ.xカ", result, "Unexpected combined text.");
        }
        [TestMethod]
        public void Test_Combine_CG0317()
        {
			Combiner.CombineMode = CombineMode.CG;
			Combiner.Space = "x";
			var result = Combiner.Combine("Bカキあ.カ".ToCharArray());
			Assert.AreEqual("Bカキあ.xカ", result, "Unexpected combined text.");
        }
        [TestMethod]
        public void Test_Combine_MS0318()
        {
			Combiner.CombineMode = CombineMode.MS;
			Combiner.Space = "x";
			var result = Combiner.Combine("あカBBキA".ToCharArray());
			Assert.AreEqual("あカxBxBxキxA", result, "Unexpected combined text.");
        }
        [TestMethod]
        public void Test_Combine_CG0318()
        {
			Combiner.CombineMode = CombineMode.CG;
			Combiner.Space = "x";
			var result = Combiner.Combine("あカBBキA".ToCharArray());
			Assert.AreEqual("あカBxBキA", result, "Unexpected combined text.");
        }
        [TestMethod]
        public void Test_Combine_MS0319()
        {
			Combiner.CombineMode = CombineMode.MS;
			Combiner.Space = "x";
			var result = Combiner.Combine("AB.キ..".ToCharArray());
			Assert.AreEqual("AxB.xキ..", result, "Unexpected combined text.");
        }
        [TestMethod]
        public void Test_Combine_CG0319()
        {
			Combiner.CombineMode = CombineMode.CG;
			Combiner.Space = "x";
			var result = Combiner.Combine("AB.キ..".ToCharArray());
			Assert.AreEqual("AxB.xキ..", result, "Unexpected combined text.");
        }
        [TestMethod]
        public void Test_Combine_MS0320()
        {
			Combiner.CombineMode = CombineMode.MS;
			Combiner.Space = "x";
			var result = Combiner.Combine("AあA。。A".ToCharArray());
			Assert.AreEqual("AxあxA。。A", result, "Unexpected combined text.");
        }
        [TestMethod]
        public void Test_Combine_CG0320()
        {
			Combiner.CombineMode = CombineMode.CG;
			Combiner.Space = "x";
			var result = Combiner.Combine("AあA。。A".ToCharArray());
			Assert.AreEqual("AあA。。A", result, "Unexpected combined text.");
        }
        [TestMethod]
        public void Test_Combine_MS0321()
        {
			Combiner.CombineMode = CombineMode.MS;
			Combiner.Space = "x";
			var result = Combiner.Combine("カあキ。カあ".ToCharArray());
			Assert.AreEqual("カあキ。カあ", result, "Unexpected combined text.");
        }
        [TestMethod]
        public void Test_Combine_CG0321()
        {
			Combiner.CombineMode = CombineMode.CG;
			Combiner.Space = "x";
			var result = Combiner.Combine("カあキ。カあ".ToCharArray());
			Assert.AreEqual("カあキ。カあ", result, "Unexpected combined text.");
        }
        [TestMethod]
        public void Test_Combine_MS0322()
        {
			Combiner.CombineMode = CombineMode.MS;
			Combiner.Space = "x";
			var result = Combiner.Combine(".キ.あ。.".ToCharArray());
			Assert.AreEqual(".xキ.xあ。.", result, "Unexpected combined text.");
        }
        [TestMethod]
        public void Test_Combine_CG0322()
        {
			Combiner.CombineMode = CombineMode.CG;
			Combiner.Space = "x";
			var result = Combiner.Combine(".キ.あ。.".ToCharArray());
			Assert.AreEqual(".xキ.xあ。.", result, "Unexpected combined text.");
        }
        [TestMethod]
        public void Test_Combine_MS0323()
        {
			Combiner.CombineMode = CombineMode.MS;
			Combiner.Space = "x";
			var result = Combiner.Combine("BAキ。BB".ToCharArray());
			Assert.AreEqual("BxAxキ。BxB", result, "Unexpected combined text.");
        }
        [TestMethod]
        public void Test_Combine_CG0323()
        {
			Combiner.CombineMode = CombineMode.CG;
			Combiner.Space = "x";
			var result = Combiner.Combine("BAキ。BB".ToCharArray());
			Assert.AreEqual("BxAキ。BxB", result, "Unexpected combined text.");
        }
        [TestMethod]
        public void Test_Combine_MS0324()
        {
			Combiner.CombineMode = CombineMode.MS;
			Combiner.Space = "x";
			var result = Combiner.Combine(".AAAカキ".ToCharArray());
			Assert.AreEqual(".xAxAxAxカxキ", result, "Unexpected combined text.");
        }
        [TestMethod]
        public void Test_Combine_CG0324()
        {
			Combiner.CombineMode = CombineMode.CG;
			Combiner.Space = "x";
			var result = Combiner.Combine(".AAAカキ".ToCharArray());
			Assert.AreEqual(".xAxAxAカキ", result, "Unexpected combined text.");
        }
        [TestMethod]
        public void Test_Combine_MS0325()
        {
			Combiner.CombineMode = CombineMode.MS;
			Combiner.Space = "x";
			var result = Combiner.Combine("BカA..B".ToCharArray());
			Assert.AreEqual("BxカxA..xB", result, "Unexpected combined text.");
        }
        [TestMethod]
        public void Test_Combine_CG0325()
        {
			Combiner.CombineMode = CombineMode.CG;
			Combiner.Space = "x";
			var result = Combiner.Combine("BカA..B".ToCharArray());
			Assert.AreEqual("BカA..xB", result, "Unexpected combined text.");
        }
        [TestMethod]
        public void Test_Combine_MS0326()
        {
			Combiner.CombineMode = CombineMode.MS;
			Combiner.Space = "x";
			var result = Combiner.Combine(".。.ああキ".ToCharArray());
			Assert.AreEqual(".。.xああキ", result, "Unexpected combined text.");
        }
        [TestMethod]
        public void Test_Combine_CG0326()
        {
			Combiner.CombineMode = CombineMode.CG;
			Combiner.Space = "x";
			var result = Combiner.Combine(".。.ああキ".ToCharArray());
			Assert.AreEqual(".。.xああキ", result, "Unexpected combined text.");
        }
        [TestMethod]
        public void Test_Combine_MS0327()
        {
			Combiner.CombineMode = CombineMode.MS;
			Combiner.Space = "x";
			var result = Combiner.Combine("カカB.AA".ToCharArray());
			Assert.AreEqual("カxカxB.xAxA", result, "Unexpected combined text.");
        }
        [TestMethod]
        public void Test_Combine_CG0327()
        {
			Combiner.CombineMode = CombineMode.CG;
			Combiner.Space = "x";
			var result = Combiner.Combine("カカB.AA".ToCharArray());
			Assert.AreEqual("カカB.xAxA", result, "Unexpected combined text.");
        }
        [TestMethod]
        public void Test_Combine_MS0328()
        {
			Combiner.CombineMode = CombineMode.MS;
			Combiner.Space = "x";
			var result = Combiner.Combine("カ.カカキカ".ToCharArray());
			Assert.AreEqual("カ.xカxカxキxカ", result, "Unexpected combined text.");
        }
        [TestMethod]
        public void Test_Combine_CG0328()
        {
			Combiner.CombineMode = CombineMode.CG;
			Combiner.Space = "x";
			var result = Combiner.Combine("カ.カカキカ".ToCharArray());
			Assert.AreEqual("カ.xカカキカ", result, "Unexpected combined text.");
        }
        [TestMethod]
        public void Test_Combine_MS0329()
        {
			Combiner.CombineMode = CombineMode.MS;
			Combiner.Space = "x";
			var result = Combiner.Combine("キBカAキあ".ToCharArray());
			Assert.AreEqual("キxBxカxAxキあ", result, "Unexpected combined text.");
        }
        [TestMethod]
        public void Test_Combine_CG0329()
        {
			Combiner.CombineMode = CombineMode.CG;
			Combiner.Space = "x";
			var result = Combiner.Combine("キBカAキあ".ToCharArray());
			Assert.AreEqual("キBカAキあ", result, "Unexpected combined text.");
        }
        [TestMethod]
        public void Test_Combine_MS0330()
        {
			Combiner.CombineMode = CombineMode.MS;
			Combiner.Space = "x";
			var result = Combiner.Combine("あABAAA".ToCharArray());
			Assert.AreEqual("あxAxBxAxAxA", result, "Unexpected combined text.");
        }
        [TestMethod]
        public void Test_Combine_CG0330()
        {
			Combiner.CombineMode = CombineMode.CG;
			Combiner.Space = "x";
			var result = Combiner.Combine("あABAAA".ToCharArray());
			Assert.AreEqual("あAxBxAxAxA", result, "Unexpected combined text.");
        }

		// Postamble

		protected static TokenCombiner<char> Combiner;

		[ClassInitialize]
        public static void ClassInitialize(TestContext context)
        {
			Combiner = new TokenCombiner<char>(ch => ch.ToString(), ch => true);
        }

        [ClassCleanup]
        public static void ClassCleanup()
        {
			Combiner = null;
        }
	}
}
