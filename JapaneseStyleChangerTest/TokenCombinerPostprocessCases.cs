// <auto-generated>
// THIS (.cs) FILE IS GENERATED BY T4. DO NOT CHANGE IT. CHANGE THE .tt FILE INSTEAD.
// </auto-generated>

using System;
using Microsoft.VisualStudio.TestTools.UnitTesting;

using JapaneseStyleChanger;

namespace JapaneseStyleChangerTest
{
    [TestClass]
    public class TokenCombinerPostprocessCases
    {
		// Generated text cases.


        [TestMethod]
        public void Test_Combine_postprocess_00_0000()
        {
			var result = TokenCombiner.Combine("a (b) c", postprocess: null);
			Assert.AreEqual("a (b) c", result, "Unexpected combined text.");
        }


        [TestMethod]
        public void Test_Combine_postprocess_01_0000()
        {
			var result = TokenCombiner.Combine("a (b) c", postprocess: TokenCombiner.AsciiParentheses);
			Assert.AreEqual("a (b) c", result, "Unexpected combined text.");
        }


        [TestMethod]
        public void Test_Combine_postprocess_02_0000()
        {
			var result = TokenCombiner.Combine("a (b) c", postprocess: TokenCombiner.FullWidthParentheses);
			Assert.AreEqual("a（b）c", result, "Unexpected combined text.");
        }


        [TestMethod]
        public void Test_Combine_postprocess_00_0001()
        {
			var result = TokenCombiner.Combine("a（b）c", postprocess: null);
			Assert.AreEqual("a（b）c", result, "Unexpected combined text.");
        }


        [TestMethod]
        public void Test_Combine_postprocess_01_0001()
        {
			var result = TokenCombiner.Combine("a（b）c", postprocess: TokenCombiner.AsciiParentheses);
			Assert.AreEqual("a (b) c", result, "Unexpected combined text.");
        }


        [TestMethod]
        public void Test_Combine_postprocess_02_0001()
        {
			var result = TokenCombiner.Combine("a（b）c", postprocess: TokenCombiner.FullWidthParentheses);
			Assert.AreEqual("a（b）c", result, "Unexpected combined text.");
        }


        [TestMethod]
        public void Test_Combine_postprocess_00_0002()
        {
			var result = TokenCombiner.Combine("a [b] c", postprocess: null);
			Assert.AreEqual("a [b] c", result, "Unexpected combined text.");
        }


        [TestMethod]
        public void Test_Combine_postprocess_01_0002()
        {
			var result = TokenCombiner.Combine("a [b] c", postprocess: TokenCombiner.AsciiParentheses);
			Assert.AreEqual("a [b] c", result, "Unexpected combined text.");
        }


        [TestMethod]
        public void Test_Combine_postprocess_02_0002()
        {
			var result = TokenCombiner.Combine("a [b] c", postprocess: TokenCombiner.FullWidthParentheses);
			Assert.AreEqual("a［b］c", result, "Unexpected combined text.");
        }


        [TestMethod]
        public void Test_Combine_postprocess_00_0003()
        {
			var result = TokenCombiner.Combine("a［b］c", postprocess: null);
			Assert.AreEqual("a［b］c", result, "Unexpected combined text.");
        }


        [TestMethod]
        public void Test_Combine_postprocess_01_0003()
        {
			var result = TokenCombiner.Combine("a［b］c", postprocess: TokenCombiner.AsciiParentheses);
			Assert.AreEqual("a [b] c", result, "Unexpected combined text.");
        }


        [TestMethod]
        public void Test_Combine_postprocess_02_0003()
        {
			var result = TokenCombiner.Combine("a［b］c", postprocess: TokenCombiner.FullWidthParentheses);
			Assert.AreEqual("a［b］c", result, "Unexpected combined text.");
        }


        [TestMethod]
        public void Test_Combine_postprocess_00_0004()
        {
			var result = TokenCombiner.Combine("a {b} c", postprocess: null);
			Assert.AreEqual("a {b} c", result, "Unexpected combined text.");
        }


        [TestMethod]
        public void Test_Combine_postprocess_01_0004()
        {
			var result = TokenCombiner.Combine("a {b} c", postprocess: TokenCombiner.AsciiParentheses);
			Assert.AreEqual("a {b} c", result, "Unexpected combined text.");
        }


        [TestMethod]
        public void Test_Combine_postprocess_02_0004()
        {
			var result = TokenCombiner.Combine("a {b} c", postprocess: TokenCombiner.FullWidthParentheses);
			Assert.AreEqual("a｛b｝c", result, "Unexpected combined text.");
        }


        [TestMethod]
        public void Test_Combine_postprocess_00_0005()
        {
			var result = TokenCombiner.Combine("a｛b｝c", postprocess: null);
			Assert.AreEqual("a｛b｝c", result, "Unexpected combined text.");
        }


        [TestMethod]
        public void Test_Combine_postprocess_01_0005()
        {
			var result = TokenCombiner.Combine("a｛b｝c", postprocess: TokenCombiner.AsciiParentheses);
			Assert.AreEqual("a {b} c", result, "Unexpected combined text.");
        }


        [TestMethod]
        public void Test_Combine_postprocess_02_0005()
        {
			var result = TokenCombiner.Combine("a｛b｝c", postprocess: TokenCombiner.FullWidthParentheses);
			Assert.AreEqual("a｛b｝c", result, "Unexpected combined text.");
        }


        [TestMethod]
        public void Test_Combine_postprocess_00_0010()
        {
			var result = TokenCombiner.Combine(") (", postprocess: null);
			Assert.AreEqual(") (", result, "Unexpected combined text.");
        }


        [TestMethod]
        public void Test_Combine_postprocess_01_0010()
        {
			var result = TokenCombiner.Combine(") (", postprocess: TokenCombiner.AsciiParentheses);
			Assert.AreEqual(") (", result, "Unexpected combined text.");
        }


        [TestMethod]
        public void Test_Combine_postprocess_02_0010()
        {
			var result = TokenCombiner.Combine(") (", postprocess: TokenCombiner.FullWidthParentheses);
			Assert.AreEqual("）（", result, "Unexpected combined text.");
        }


        [TestMethod]
        public void Test_Combine_postprocess_00_0011()
        {
			var result = TokenCombiner.Combine("）（", postprocess: null);
			Assert.AreEqual("）（", result, "Unexpected combined text.");
        }


        [TestMethod]
        public void Test_Combine_postprocess_01_0011()
        {
			var result = TokenCombiner.Combine("）（", postprocess: TokenCombiner.AsciiParentheses);
			Assert.AreEqual(") (", result, "Unexpected combined text.");
        }


        [TestMethod]
        public void Test_Combine_postprocess_02_0011()
        {
			var result = TokenCombiner.Combine("）（", postprocess: TokenCombiner.FullWidthParentheses);
			Assert.AreEqual("）（", result, "Unexpected combined text.");
        }


        [TestMethod]
        public void Test_Combine_postprocess_00_0012()
        {
			var result = TokenCombiner.Combine("] [", postprocess: null);
			Assert.AreEqual("] [", result, "Unexpected combined text.");
        }


        [TestMethod]
        public void Test_Combine_postprocess_01_0012()
        {
			var result = TokenCombiner.Combine("] [", postprocess: TokenCombiner.AsciiParentheses);
			Assert.AreEqual("] [", result, "Unexpected combined text.");
        }


        [TestMethod]
        public void Test_Combine_postprocess_02_0012()
        {
			var result = TokenCombiner.Combine("] [", postprocess: TokenCombiner.FullWidthParentheses);
			Assert.AreEqual("］［", result, "Unexpected combined text.");
        }


        [TestMethod]
        public void Test_Combine_postprocess_00_0013()
        {
			var result = TokenCombiner.Combine("］［", postprocess: null);
			Assert.AreEqual("］［", result, "Unexpected combined text.");
        }


        [TestMethod]
        public void Test_Combine_postprocess_01_0013()
        {
			var result = TokenCombiner.Combine("］［", postprocess: TokenCombiner.AsciiParentheses);
			Assert.AreEqual("] [", result, "Unexpected combined text.");
        }


        [TestMethod]
        public void Test_Combine_postprocess_02_0013()
        {
			var result = TokenCombiner.Combine("］［", postprocess: TokenCombiner.FullWidthParentheses);
			Assert.AreEqual("］［", result, "Unexpected combined text.");
        }


        [TestMethod]
        public void Test_Combine_postprocess_00_0014()
        {
			var result = TokenCombiner.Combine("} {", postprocess: null);
			Assert.AreEqual("} {", result, "Unexpected combined text.");
        }


        [TestMethod]
        public void Test_Combine_postprocess_01_0014()
        {
			var result = TokenCombiner.Combine("} {", postprocess: TokenCombiner.AsciiParentheses);
			Assert.AreEqual("} {", result, "Unexpected combined text.");
        }


        [TestMethod]
        public void Test_Combine_postprocess_02_0014()
        {
			var result = TokenCombiner.Combine("} {", postprocess: TokenCombiner.FullWidthParentheses);
			Assert.AreEqual("｝｛", result, "Unexpected combined text.");
        }


        [TestMethod]
        public void Test_Combine_postprocess_00_0015()
        {
			var result = TokenCombiner.Combine("｝｛", postprocess: null);
			Assert.AreEqual("｝｛", result, "Unexpected combined text.");
        }


        [TestMethod]
        public void Test_Combine_postprocess_01_0015()
        {
			var result = TokenCombiner.Combine("｝｛", postprocess: TokenCombiner.AsciiParentheses);
			Assert.AreEqual("} {", result, "Unexpected combined text.");
        }


        [TestMethod]
        public void Test_Combine_postprocess_02_0015()
        {
			var result = TokenCombiner.Combine("｝｛", postprocess: TokenCombiner.FullWidthParentheses);
			Assert.AreEqual("｝｛", result, "Unexpected combined text.");
        }


        [TestMethod]
        public void Test_Combine_postprocess_00_0020()
        {
			var result = TokenCombiner.Combine("a ((", postprocess: null);
			Assert.AreEqual("a ((", result, "Unexpected combined text.");
        }


        [TestMethod]
        public void Test_Combine_postprocess_01_0020()
        {
			var result = TokenCombiner.Combine("a ((", postprocess: TokenCombiner.AsciiParentheses);
			Assert.AreEqual("a ((", result, "Unexpected combined text.");
        }


        [TestMethod]
        public void Test_Combine_postprocess_02_0020()
        {
			var result = TokenCombiner.Combine("a ((", postprocess: TokenCombiner.FullWidthParentheses);
			Assert.AreEqual("a（（", result, "Unexpected combined text.");
        }


        [TestMethod]
        public void Test_Combine_postprocess_00_0021()
        {
			var result = TokenCombiner.Combine("a（（", postprocess: null);
			Assert.AreEqual("a（（", result, "Unexpected combined text.");
        }


        [TestMethod]
        public void Test_Combine_postprocess_01_0021()
        {
			var result = TokenCombiner.Combine("a（（", postprocess: TokenCombiner.AsciiParentheses);
			Assert.AreEqual("a ((", result, "Unexpected combined text.");
        }


        [TestMethod]
        public void Test_Combine_postprocess_02_0021()
        {
			var result = TokenCombiner.Combine("a（（", postprocess: TokenCombiner.FullWidthParentheses);
			Assert.AreEqual("a（（", result, "Unexpected combined text.");
        }


        [TestMethod]
        public void Test_Combine_postprocess_00_0022()
        {
			var result = TokenCombiner.Combine("a [[", postprocess: null);
			Assert.AreEqual("a [[", result, "Unexpected combined text.");
        }


        [TestMethod]
        public void Test_Combine_postprocess_01_0022()
        {
			var result = TokenCombiner.Combine("a [[", postprocess: TokenCombiner.AsciiParentheses);
			Assert.AreEqual("a [[", result, "Unexpected combined text.");
        }


        [TestMethod]
        public void Test_Combine_postprocess_02_0022()
        {
			var result = TokenCombiner.Combine("a [[", postprocess: TokenCombiner.FullWidthParentheses);
			Assert.AreEqual("a［［", result, "Unexpected combined text.");
        }


        [TestMethod]
        public void Test_Combine_postprocess_00_0023()
        {
			var result = TokenCombiner.Combine("a［［", postprocess: null);
			Assert.AreEqual("a［［", result, "Unexpected combined text.");
        }


        [TestMethod]
        public void Test_Combine_postprocess_01_0023()
        {
			var result = TokenCombiner.Combine("a［［", postprocess: TokenCombiner.AsciiParentheses);
			Assert.AreEqual("a [[", result, "Unexpected combined text.");
        }


        [TestMethod]
        public void Test_Combine_postprocess_02_0023()
        {
			var result = TokenCombiner.Combine("a［［", postprocess: TokenCombiner.FullWidthParentheses);
			Assert.AreEqual("a［［", result, "Unexpected combined text.");
        }


        [TestMethod]
        public void Test_Combine_postprocess_00_0024()
        {
			var result = TokenCombiner.Combine("a {{", postprocess: null);
			Assert.AreEqual("a {{", result, "Unexpected combined text.");
        }


        [TestMethod]
        public void Test_Combine_postprocess_01_0024()
        {
			var result = TokenCombiner.Combine("a {{", postprocess: TokenCombiner.AsciiParentheses);
			Assert.AreEqual("a {{", result, "Unexpected combined text.");
        }


        [TestMethod]
        public void Test_Combine_postprocess_02_0024()
        {
			var result = TokenCombiner.Combine("a {{", postprocess: TokenCombiner.FullWidthParentheses);
			Assert.AreEqual("a｛｛", result, "Unexpected combined text.");
        }


        [TestMethod]
        public void Test_Combine_postprocess_00_0025()
        {
			var result = TokenCombiner.Combine("a｛｛", postprocess: null);
			Assert.AreEqual("a｛｛", result, "Unexpected combined text.");
        }


        [TestMethod]
        public void Test_Combine_postprocess_01_0025()
        {
			var result = TokenCombiner.Combine("a｛｛", postprocess: TokenCombiner.AsciiParentheses);
			Assert.AreEqual("a {{", result, "Unexpected combined text.");
        }


        [TestMethod]
        public void Test_Combine_postprocess_02_0025()
        {
			var result = TokenCombiner.Combine("a｛｛", postprocess: TokenCombiner.FullWidthParentheses);
			Assert.AreEqual("a｛｛", result, "Unexpected combined text.");
        }


        [TestMethod]
        public void Test_Combine_postprocess_00_0030()
        {
			var result = TokenCombiner.Combine(")) b", postprocess: null);
			Assert.AreEqual(")) b", result, "Unexpected combined text.");
        }


        [TestMethod]
        public void Test_Combine_postprocess_01_0030()
        {
			var result = TokenCombiner.Combine(")) b", postprocess: TokenCombiner.AsciiParentheses);
			Assert.AreEqual(")) b", result, "Unexpected combined text.");
        }


        [TestMethod]
        public void Test_Combine_postprocess_02_0030()
        {
			var result = TokenCombiner.Combine(")) b", postprocess: TokenCombiner.FullWidthParentheses);
			Assert.AreEqual("））b", result, "Unexpected combined text.");
        }


        [TestMethod]
        public void Test_Combine_postprocess_00_0031()
        {
			var result = TokenCombiner.Combine("））b", postprocess: null);
			Assert.AreEqual("））b", result, "Unexpected combined text.");
        }


        [TestMethod]
        public void Test_Combine_postprocess_01_0031()
        {
			var result = TokenCombiner.Combine("））b", postprocess: TokenCombiner.AsciiParentheses);
			Assert.AreEqual(")) b", result, "Unexpected combined text.");
        }


        [TestMethod]
        public void Test_Combine_postprocess_02_0031()
        {
			var result = TokenCombiner.Combine("））b", postprocess: TokenCombiner.FullWidthParentheses);
			Assert.AreEqual("））b", result, "Unexpected combined text.");
        }


        [TestMethod]
        public void Test_Combine_postprocess_00_0032()
        {
			var result = TokenCombiner.Combine("]] b", postprocess: null);
			Assert.AreEqual("]] b", result, "Unexpected combined text.");
        }


        [TestMethod]
        public void Test_Combine_postprocess_01_0032()
        {
			var result = TokenCombiner.Combine("]] b", postprocess: TokenCombiner.AsciiParentheses);
			Assert.AreEqual("]] b", result, "Unexpected combined text.");
        }


        [TestMethod]
        public void Test_Combine_postprocess_02_0032()
        {
			var result = TokenCombiner.Combine("]] b", postprocess: TokenCombiner.FullWidthParentheses);
			Assert.AreEqual("］］b", result, "Unexpected combined text.");
        }


        [TestMethod]
        public void Test_Combine_postprocess_00_0033()
        {
			var result = TokenCombiner.Combine("］］b", postprocess: null);
			Assert.AreEqual("］］b", result, "Unexpected combined text.");
        }


        [TestMethod]
        public void Test_Combine_postprocess_01_0033()
        {
			var result = TokenCombiner.Combine("］］b", postprocess: TokenCombiner.AsciiParentheses);
			Assert.AreEqual("]] b", result, "Unexpected combined text.");
        }


        [TestMethod]
        public void Test_Combine_postprocess_02_0033()
        {
			var result = TokenCombiner.Combine("］］b", postprocess: TokenCombiner.FullWidthParentheses);
			Assert.AreEqual("］］b", result, "Unexpected combined text.");
        }


        [TestMethod]
        public void Test_Combine_postprocess_00_0034()
        {
			var result = TokenCombiner.Combine("}} b", postprocess: null);
			Assert.AreEqual("}} b", result, "Unexpected combined text.");
        }


        [TestMethod]
        public void Test_Combine_postprocess_01_0034()
        {
			var result = TokenCombiner.Combine("}} b", postprocess: TokenCombiner.AsciiParentheses);
			Assert.AreEqual("}} b", result, "Unexpected combined text.");
        }


        [TestMethod]
        public void Test_Combine_postprocess_02_0034()
        {
			var result = TokenCombiner.Combine("}} b", postprocess: TokenCombiner.FullWidthParentheses);
			Assert.AreEqual("｝｝b", result, "Unexpected combined text.");
        }


        [TestMethod]
        public void Test_Combine_postprocess_00_0035()
        {
			var result = TokenCombiner.Combine("｝｝b", postprocess: null);
			Assert.AreEqual("｝｝b", result, "Unexpected combined text.");
        }


        [TestMethod]
        public void Test_Combine_postprocess_01_0035()
        {
			var result = TokenCombiner.Combine("｝｝b", postprocess: TokenCombiner.AsciiParentheses);
			Assert.AreEqual("}} b", result, "Unexpected combined text.");
        }


        [TestMethod]
        public void Test_Combine_postprocess_02_0035()
        {
			var result = TokenCombiner.Combine("｝｝b", postprocess: TokenCombiner.FullWidthParentheses);
			Assert.AreEqual("｝｝b", result, "Unexpected combined text.");
        }


        [TestMethod]
        public void Test_Combine_postprocess_00_0040()
        {
			var result = TokenCombiner.Combine("()", postprocess: null);
			Assert.AreEqual("()", result, "Unexpected combined text.");
        }


        [TestMethod]
        public void Test_Combine_postprocess_01_0040()
        {
			var result = TokenCombiner.Combine("()", postprocess: TokenCombiner.AsciiParentheses);
			Assert.AreEqual("()", result, "Unexpected combined text.");
        }


        [TestMethod]
        public void Test_Combine_postprocess_02_0040()
        {
			var result = TokenCombiner.Combine("()", postprocess: TokenCombiner.FullWidthParentheses);
			Assert.AreEqual("（）", result, "Unexpected combined text.");
        }


        [TestMethod]
        public void Test_Combine_postprocess_00_0041()
        {
			var result = TokenCombiner.Combine("（）", postprocess: null);
			Assert.AreEqual("（）", result, "Unexpected combined text.");
        }


        [TestMethod]
        public void Test_Combine_postprocess_01_0041()
        {
			var result = TokenCombiner.Combine("（）", postprocess: TokenCombiner.AsciiParentheses);
			Assert.AreEqual("()", result, "Unexpected combined text.");
        }


        [TestMethod]
        public void Test_Combine_postprocess_02_0041()
        {
			var result = TokenCombiner.Combine("（）", postprocess: TokenCombiner.FullWidthParentheses);
			Assert.AreEqual("（）", result, "Unexpected combined text.");
        }


        [TestMethod]
        public void Test_Combine_postprocess_00_0042()
        {
			var result = TokenCombiner.Combine("[]", postprocess: null);
			Assert.AreEqual("[]", result, "Unexpected combined text.");
        }


        [TestMethod]
        public void Test_Combine_postprocess_01_0042()
        {
			var result = TokenCombiner.Combine("[]", postprocess: TokenCombiner.AsciiParentheses);
			Assert.AreEqual("[]", result, "Unexpected combined text.");
        }


        [TestMethod]
        public void Test_Combine_postprocess_02_0042()
        {
			var result = TokenCombiner.Combine("[]", postprocess: TokenCombiner.FullWidthParentheses);
			Assert.AreEqual("［］", result, "Unexpected combined text.");
        }


        [TestMethod]
        public void Test_Combine_postprocess_00_0043()
        {
			var result = TokenCombiner.Combine("［］", postprocess: null);
			Assert.AreEqual("［］", result, "Unexpected combined text.");
        }


        [TestMethod]
        public void Test_Combine_postprocess_01_0043()
        {
			var result = TokenCombiner.Combine("［］", postprocess: TokenCombiner.AsciiParentheses);
			Assert.AreEqual("[]", result, "Unexpected combined text.");
        }


        [TestMethod]
        public void Test_Combine_postprocess_02_0043()
        {
			var result = TokenCombiner.Combine("［］", postprocess: TokenCombiner.FullWidthParentheses);
			Assert.AreEqual("［］", result, "Unexpected combined text.");
        }


        [TestMethod]
        public void Test_Combine_postprocess_00_0044()
        {
			var result = TokenCombiner.Combine("{}", postprocess: null);
			Assert.AreEqual("{}", result, "Unexpected combined text.");
        }


        [TestMethod]
        public void Test_Combine_postprocess_01_0044()
        {
			var result = TokenCombiner.Combine("{}", postprocess: TokenCombiner.AsciiParentheses);
			Assert.AreEqual("{}", result, "Unexpected combined text.");
        }


        [TestMethod]
        public void Test_Combine_postprocess_02_0044()
        {
			var result = TokenCombiner.Combine("{}", postprocess: TokenCombiner.FullWidthParentheses);
			Assert.AreEqual("｛｝", result, "Unexpected combined text.");
        }


        [TestMethod]
        public void Test_Combine_postprocess_00_0045()
        {
			var result = TokenCombiner.Combine("｛｝", postprocess: null);
			Assert.AreEqual("｛｝", result, "Unexpected combined text.");
        }


        [TestMethod]
        public void Test_Combine_postprocess_01_0045()
        {
			var result = TokenCombiner.Combine("｛｝", postprocess: TokenCombiner.AsciiParentheses);
			Assert.AreEqual("{}", result, "Unexpected combined text.");
        }


        [TestMethod]
        public void Test_Combine_postprocess_02_0045()
        {
			var result = TokenCombiner.Combine("｛｝", postprocess: TokenCombiner.FullWidthParentheses);
			Assert.AreEqual("｛｝", result, "Unexpected combined text.");
        }


        [TestMethod]
        public void Test_Combine_postprocess_00_0050()
        {
			var result = TokenCombiner.Combine(")。(", postprocess: null);
			Assert.AreEqual(")。(", result, "Unexpected combined text.");
        }


        [TestMethod]
        public void Test_Combine_postprocess_01_0050()
        {
			var result = TokenCombiner.Combine(")。(", postprocess: TokenCombiner.AsciiParentheses);
			Assert.AreEqual(")。(", result, "Unexpected combined text.");
        }


        [TestMethod]
        public void Test_Combine_postprocess_02_0050()
        {
			var result = TokenCombiner.Combine(")。(", postprocess: TokenCombiner.FullWidthParentheses);
			Assert.AreEqual("）。（", result, "Unexpected combined text.");
        }


        [TestMethod]
        public void Test_Combine_postprocess_00_0051()
        {
			var result = TokenCombiner.Combine("）。（", postprocess: null);
			Assert.AreEqual("）。（", result, "Unexpected combined text.");
        }


        [TestMethod]
        public void Test_Combine_postprocess_01_0051()
        {
			var result = TokenCombiner.Combine("）。（", postprocess: TokenCombiner.AsciiParentheses);
			Assert.AreEqual(")。(", result, "Unexpected combined text.");
        }


        [TestMethod]
        public void Test_Combine_postprocess_02_0051()
        {
			var result = TokenCombiner.Combine("）。（", postprocess: TokenCombiner.FullWidthParentheses);
			Assert.AreEqual("）。（", result, "Unexpected combined text.");
        }


        [TestMethod]
        public void Test_Combine_postprocess_00_0052()
        {
			var result = TokenCombiner.Combine("]。[", postprocess: null);
			Assert.AreEqual("]。[", result, "Unexpected combined text.");
        }


        [TestMethod]
        public void Test_Combine_postprocess_01_0052()
        {
			var result = TokenCombiner.Combine("]。[", postprocess: TokenCombiner.AsciiParentheses);
			Assert.AreEqual("]。[", result, "Unexpected combined text.");
        }


        [TestMethod]
        public void Test_Combine_postprocess_02_0052()
        {
			var result = TokenCombiner.Combine("]。[", postprocess: TokenCombiner.FullWidthParentheses);
			Assert.AreEqual("］。［", result, "Unexpected combined text.");
        }


        [TestMethod]
        public void Test_Combine_postprocess_00_0053()
        {
			var result = TokenCombiner.Combine("］。［", postprocess: null);
			Assert.AreEqual("］。［", result, "Unexpected combined text.");
        }


        [TestMethod]
        public void Test_Combine_postprocess_01_0053()
        {
			var result = TokenCombiner.Combine("］。［", postprocess: TokenCombiner.AsciiParentheses);
			Assert.AreEqual("]。[", result, "Unexpected combined text.");
        }


        [TestMethod]
        public void Test_Combine_postprocess_02_0053()
        {
			var result = TokenCombiner.Combine("］。［", postprocess: TokenCombiner.FullWidthParentheses);
			Assert.AreEqual("］。［", result, "Unexpected combined text.");
        }


        [TestMethod]
        public void Test_Combine_postprocess_00_0054()
        {
			var result = TokenCombiner.Combine("}。{", postprocess: null);
			Assert.AreEqual("}。{", result, "Unexpected combined text.");
        }


        [TestMethod]
        public void Test_Combine_postprocess_01_0054()
        {
			var result = TokenCombiner.Combine("}。{", postprocess: TokenCombiner.AsciiParentheses);
			Assert.AreEqual("}。{", result, "Unexpected combined text.");
        }


        [TestMethod]
        public void Test_Combine_postprocess_02_0054()
        {
			var result = TokenCombiner.Combine("}。{", postprocess: TokenCombiner.FullWidthParentheses);
			Assert.AreEqual("｝。｛", result, "Unexpected combined text.");
        }


        [TestMethod]
        public void Test_Combine_postprocess_00_0055()
        {
			var result = TokenCombiner.Combine("｝。｛", postprocess: null);
			Assert.AreEqual("｝。｛", result, "Unexpected combined text.");
        }


        [TestMethod]
        public void Test_Combine_postprocess_01_0055()
        {
			var result = TokenCombiner.Combine("｝。｛", postprocess: TokenCombiner.AsciiParentheses);
			Assert.AreEqual("}。{", result, "Unexpected combined text.");
        }


        [TestMethod]
        public void Test_Combine_postprocess_02_0055()
        {
			var result = TokenCombiner.Combine("｝。｛", postprocess: TokenCombiner.FullWidthParentheses);
			Assert.AreEqual("｝。｛", result, "Unexpected combined text.");
        }


        [TestMethod]
        public void Test_Combine_postprocess_00_0060()
        {
			var result = TokenCombiner.Combine(")、(", postprocess: null);
			Assert.AreEqual(")、(", result, "Unexpected combined text.");
        }


        [TestMethod]
        public void Test_Combine_postprocess_01_0060()
        {
			var result = TokenCombiner.Combine(")、(", postprocess: TokenCombiner.AsciiParentheses);
			Assert.AreEqual(")、(", result, "Unexpected combined text.");
        }


        [TestMethod]
        public void Test_Combine_postprocess_02_0060()
        {
			var result = TokenCombiner.Combine(")、(", postprocess: TokenCombiner.FullWidthParentheses);
			Assert.AreEqual("）、（", result, "Unexpected combined text.");
        }


        [TestMethod]
        public void Test_Combine_postprocess_00_0061()
        {
			var result = TokenCombiner.Combine("）、（", postprocess: null);
			Assert.AreEqual("）、（", result, "Unexpected combined text.");
        }


        [TestMethod]
        public void Test_Combine_postprocess_01_0061()
        {
			var result = TokenCombiner.Combine("）、（", postprocess: TokenCombiner.AsciiParentheses);
			Assert.AreEqual(")、(", result, "Unexpected combined text.");
        }


        [TestMethod]
        public void Test_Combine_postprocess_02_0061()
        {
			var result = TokenCombiner.Combine("）、（", postprocess: TokenCombiner.FullWidthParentheses);
			Assert.AreEqual("）、（", result, "Unexpected combined text.");
        }


        [TestMethod]
        public void Test_Combine_postprocess_00_0062()
        {
			var result = TokenCombiner.Combine("]、[", postprocess: null);
			Assert.AreEqual("]、[", result, "Unexpected combined text.");
        }


        [TestMethod]
        public void Test_Combine_postprocess_01_0062()
        {
			var result = TokenCombiner.Combine("]、[", postprocess: TokenCombiner.AsciiParentheses);
			Assert.AreEqual("]、[", result, "Unexpected combined text.");
        }


        [TestMethod]
        public void Test_Combine_postprocess_02_0062()
        {
			var result = TokenCombiner.Combine("]、[", postprocess: TokenCombiner.FullWidthParentheses);
			Assert.AreEqual("］、［", result, "Unexpected combined text.");
        }


        [TestMethod]
        public void Test_Combine_postprocess_00_0063()
        {
			var result = TokenCombiner.Combine("］、［", postprocess: null);
			Assert.AreEqual("］、［", result, "Unexpected combined text.");
        }


        [TestMethod]
        public void Test_Combine_postprocess_01_0063()
        {
			var result = TokenCombiner.Combine("］、［", postprocess: TokenCombiner.AsciiParentheses);
			Assert.AreEqual("]、[", result, "Unexpected combined text.");
        }


        [TestMethod]
        public void Test_Combine_postprocess_02_0063()
        {
			var result = TokenCombiner.Combine("］、［", postprocess: TokenCombiner.FullWidthParentheses);
			Assert.AreEqual("］、［", result, "Unexpected combined text.");
        }


        [TestMethod]
        public void Test_Combine_postprocess_00_0064()
        {
			var result = TokenCombiner.Combine("}、{", postprocess: null);
			Assert.AreEqual("}、{", result, "Unexpected combined text.");
        }


        [TestMethod]
        public void Test_Combine_postprocess_01_0064()
        {
			var result = TokenCombiner.Combine("}、{", postprocess: TokenCombiner.AsciiParentheses);
			Assert.AreEqual("}、{", result, "Unexpected combined text.");
        }


        [TestMethod]
        public void Test_Combine_postprocess_02_0064()
        {
			var result = TokenCombiner.Combine("}、{", postprocess: TokenCombiner.FullWidthParentheses);
			Assert.AreEqual("｝、｛", result, "Unexpected combined text.");
        }


        [TestMethod]
        public void Test_Combine_postprocess_00_0065()
        {
			var result = TokenCombiner.Combine("｝、｛", postprocess: null);
			Assert.AreEqual("｝、｛", result, "Unexpected combined text.");
        }


        [TestMethod]
        public void Test_Combine_postprocess_01_0065()
        {
			var result = TokenCombiner.Combine("｝、｛", postprocess: TokenCombiner.AsciiParentheses);
			Assert.AreEqual("}、{", result, "Unexpected combined text.");
        }


        [TestMethod]
        public void Test_Combine_postprocess_02_0065()
        {
			var result = TokenCombiner.Combine("｝、｛", postprocess: TokenCombiner.FullWidthParentheses);
			Assert.AreEqual("｝、｛", result, "Unexpected combined text.");
        }


        [TestMethod]
        public void Test_Combine_postprocess_00_0070()
        {
			var result = TokenCombiner.Combine("】(", postprocess: null);
			Assert.AreEqual("】(", result, "Unexpected combined text.");
        }


        [TestMethod]
        public void Test_Combine_postprocess_01_0070()
        {
			var result = TokenCombiner.Combine("】(", postprocess: TokenCombiner.AsciiParentheses);
			Assert.AreEqual("】(", result, "Unexpected combined text.");
        }


        [TestMethod]
        public void Test_Combine_postprocess_02_0070()
        {
			var result = TokenCombiner.Combine("】(", postprocess: TokenCombiner.FullWidthParentheses);
			Assert.AreEqual("】（", result, "Unexpected combined text.");
        }


        [TestMethod]
        public void Test_Combine_postprocess_00_0071()
        {
			var result = TokenCombiner.Combine("】（", postprocess: null);
			Assert.AreEqual("】（", result, "Unexpected combined text.");
        }


        [TestMethod]
        public void Test_Combine_postprocess_01_0071()
        {
			var result = TokenCombiner.Combine("】（", postprocess: TokenCombiner.AsciiParentheses);
			Assert.AreEqual("】(", result, "Unexpected combined text.");
        }


        [TestMethod]
        public void Test_Combine_postprocess_02_0071()
        {
			var result = TokenCombiner.Combine("】（", postprocess: TokenCombiner.FullWidthParentheses);
			Assert.AreEqual("】（", result, "Unexpected combined text.");
        }


        [TestMethod]
        public void Test_Combine_postprocess_00_0072()
        {
			var result = TokenCombiner.Combine("】[", postprocess: null);
			Assert.AreEqual("】[", result, "Unexpected combined text.");
        }


        [TestMethod]
        public void Test_Combine_postprocess_01_0072()
        {
			var result = TokenCombiner.Combine("】[", postprocess: TokenCombiner.AsciiParentheses);
			Assert.AreEqual("】[", result, "Unexpected combined text.");
        }


        [TestMethod]
        public void Test_Combine_postprocess_02_0072()
        {
			var result = TokenCombiner.Combine("】[", postprocess: TokenCombiner.FullWidthParentheses);
			Assert.AreEqual("】［", result, "Unexpected combined text.");
        }


        [TestMethod]
        public void Test_Combine_postprocess_00_0073()
        {
			var result = TokenCombiner.Combine("】［", postprocess: null);
			Assert.AreEqual("】［", result, "Unexpected combined text.");
        }


        [TestMethod]
        public void Test_Combine_postprocess_01_0073()
        {
			var result = TokenCombiner.Combine("】［", postprocess: TokenCombiner.AsciiParentheses);
			Assert.AreEqual("】[", result, "Unexpected combined text.");
        }


        [TestMethod]
        public void Test_Combine_postprocess_02_0073()
        {
			var result = TokenCombiner.Combine("】［", postprocess: TokenCombiner.FullWidthParentheses);
			Assert.AreEqual("】［", result, "Unexpected combined text.");
        }


        [TestMethod]
        public void Test_Combine_postprocess_00_0074()
        {
			var result = TokenCombiner.Combine("】{", postprocess: null);
			Assert.AreEqual("】{", result, "Unexpected combined text.");
        }


        [TestMethod]
        public void Test_Combine_postprocess_01_0074()
        {
			var result = TokenCombiner.Combine("】{", postprocess: TokenCombiner.AsciiParentheses);
			Assert.AreEqual("】{", result, "Unexpected combined text.");
        }


        [TestMethod]
        public void Test_Combine_postprocess_02_0074()
        {
			var result = TokenCombiner.Combine("】{", postprocess: TokenCombiner.FullWidthParentheses);
			Assert.AreEqual("】｛", result, "Unexpected combined text.");
        }


        [TestMethod]
        public void Test_Combine_postprocess_00_0075()
        {
			var result = TokenCombiner.Combine("】｛", postprocess: null);
			Assert.AreEqual("】｛", result, "Unexpected combined text.");
        }


        [TestMethod]
        public void Test_Combine_postprocess_01_0075()
        {
			var result = TokenCombiner.Combine("】｛", postprocess: TokenCombiner.AsciiParentheses);
			Assert.AreEqual("】{", result, "Unexpected combined text.");
        }


        [TestMethod]
        public void Test_Combine_postprocess_02_0075()
        {
			var result = TokenCombiner.Combine("】｛", postprocess: TokenCombiner.FullWidthParentheses);
			Assert.AreEqual("】｛", result, "Unexpected combined text.");
        }


        [TestMethod]
        public void Test_Combine_postprocess_00_0080()
        {
			var result = TokenCombiner.Combine(")【", postprocess: null);
			Assert.AreEqual(")【", result, "Unexpected combined text.");
        }


        [TestMethod]
        public void Test_Combine_postprocess_01_0080()
        {
			var result = TokenCombiner.Combine(")【", postprocess: TokenCombiner.AsciiParentheses);
			Assert.AreEqual(")【", result, "Unexpected combined text.");
        }


        [TestMethod]
        public void Test_Combine_postprocess_02_0080()
        {
			var result = TokenCombiner.Combine(")【", postprocess: TokenCombiner.FullWidthParentheses);
			Assert.AreEqual("）【", result, "Unexpected combined text.");
        }


        [TestMethod]
        public void Test_Combine_postprocess_00_0081()
        {
			var result = TokenCombiner.Combine("）【", postprocess: null);
			Assert.AreEqual("）【", result, "Unexpected combined text.");
        }


        [TestMethod]
        public void Test_Combine_postprocess_01_0081()
        {
			var result = TokenCombiner.Combine("）【", postprocess: TokenCombiner.AsciiParentheses);
			Assert.AreEqual(")【", result, "Unexpected combined text.");
        }


        [TestMethod]
        public void Test_Combine_postprocess_02_0081()
        {
			var result = TokenCombiner.Combine("）【", postprocess: TokenCombiner.FullWidthParentheses);
			Assert.AreEqual("）【", result, "Unexpected combined text.");
        }


        [TestMethod]
        public void Test_Combine_postprocess_00_0082()
        {
			var result = TokenCombiner.Combine("]【", postprocess: null);
			Assert.AreEqual("]【", result, "Unexpected combined text.");
        }


        [TestMethod]
        public void Test_Combine_postprocess_01_0082()
        {
			var result = TokenCombiner.Combine("]【", postprocess: TokenCombiner.AsciiParentheses);
			Assert.AreEqual("]【", result, "Unexpected combined text.");
        }


        [TestMethod]
        public void Test_Combine_postprocess_02_0082()
        {
			var result = TokenCombiner.Combine("]【", postprocess: TokenCombiner.FullWidthParentheses);
			Assert.AreEqual("］【", result, "Unexpected combined text.");
        }


        [TestMethod]
        public void Test_Combine_postprocess_00_0083()
        {
			var result = TokenCombiner.Combine("］【", postprocess: null);
			Assert.AreEqual("］【", result, "Unexpected combined text.");
        }


        [TestMethod]
        public void Test_Combine_postprocess_01_0083()
        {
			var result = TokenCombiner.Combine("］【", postprocess: TokenCombiner.AsciiParentheses);
			Assert.AreEqual("]【", result, "Unexpected combined text.");
        }


        [TestMethod]
        public void Test_Combine_postprocess_02_0083()
        {
			var result = TokenCombiner.Combine("］【", postprocess: TokenCombiner.FullWidthParentheses);
			Assert.AreEqual("］【", result, "Unexpected combined text.");
        }


        [TestMethod]
        public void Test_Combine_postprocess_00_0084()
        {
			var result = TokenCombiner.Combine("}【", postprocess: null);
			Assert.AreEqual("}【", result, "Unexpected combined text.");
        }


        [TestMethod]
        public void Test_Combine_postprocess_01_0084()
        {
			var result = TokenCombiner.Combine("}【", postprocess: TokenCombiner.AsciiParentheses);
			Assert.AreEqual("}【", result, "Unexpected combined text.");
        }


        [TestMethod]
        public void Test_Combine_postprocess_02_0084()
        {
			var result = TokenCombiner.Combine("}【", postprocess: TokenCombiner.FullWidthParentheses);
			Assert.AreEqual("｝【", result, "Unexpected combined text.");
        }


        [TestMethod]
        public void Test_Combine_postprocess_00_0085()
        {
			var result = TokenCombiner.Combine("｝【", postprocess: null);
			Assert.AreEqual("｝【", result, "Unexpected combined text.");
        }


        [TestMethod]
        public void Test_Combine_postprocess_01_0085()
        {
			var result = TokenCombiner.Combine("｝【", postprocess: TokenCombiner.AsciiParentheses);
			Assert.AreEqual("}【", result, "Unexpected combined text.");
        }


        [TestMethod]
        public void Test_Combine_postprocess_02_0085()
        {
			var result = TokenCombiner.Combine("｝【", postprocess: TokenCombiner.FullWidthParentheses);
			Assert.AreEqual("｝【", result, "Unexpected combined text.");
        }


	}
}
